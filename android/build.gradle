group 'com.example.ivs_broadcaster'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://sdk.developer.deepar.ai/maven-android-repository/releases/"
        }
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 35
    namespace 'com.example.ivs_broadcaster'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 23
    }

    dependencies {
        testImplementation 'junit:junit:4.13.2'
        //noinspection GradleDependency
        testImplementation 'org.mockito:mockito-core:5.0.0'
        def camerax_version = "1.4.2"
        implementation 'androidx.camera:camera-core:' + camerax_version
        implementation 'androidx.camera:camera-camera2:' + camerax_version
        implementation 'androidx.camera:camera-lifecycle:' + camerax_version
        implementation 'androidx.camera:camera-video:' + camerax_version
        implementation 'androidx.camera:camera-view:' + camerax_version
        implementation 'androidx.camera:camera-extensions:' + camerax_version
        implementation 'com.amazonaws:ivs-broadcast:1.32.1'
        implementation 'com.amazonaws:ivs-player:1.37.0'
        //noinspection GradleDependency
        implementation 'androidx.appcompat:appcompat:1.6.1'
        //noinspection GradleDependency
        implementation 'com.google.android.material:material:1.9.0'
        //noinspection GradleDependency
        implementation 'com.google.code.gson:gson:2.10.1'
        //noinspection Aligned16KB,GradleDependency
        implementation 'ai.deepar.ar:DeepAR:5.6.4'
    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
